#include <iostream>
using namespace std;

// Base class
class Shape {
public:
    // Virtual function
    virtual void area() {
        cout << "Area of Shape cannot be defined." << endl;
    }
};

// Derived class 1
class Rectangle : public Shape {
public:
    float length, breadth;

    void area() override {   // overriding base class function
        cout << "Enter length and breadth of rectangle: ";
        cin >> length >> breadth;
        cout << "Area of Rectangle = " << length * breadth << endl;
    }
};

// Derived class 2
class Circle : public Shape {
public:
    float radius;

    void area() override {
        cout << "Enter radius of circle: ";
        cin >> radius;
        cout << "Area of Circle = " << 3.14 * radius * radius << endl;
    }
};

int main() {
    Shape *s;   // base class pointer
    Rectangle r;
    Circle c;

    cout << "--- Rectangle ---" << endl;
    s = &r;
    s->area();  // calls Rectangle's area()

    cout << "\n--- Circle ---" << endl;
    s = &c;
    s->area();  // calls Circle's area()

    return 0;
}
